/*
 * 
 */

plugins {
	id 'java-gradle-plugin'
	id 'groovy'
}

repositories {
	mavenCentral()
	jcenter()
	maven { url = "https://maven.gentics.com/maven2" }
}

dependencies {
	implementation gradleApi(),
			localGroovy(),
//			"io.reactivex:rxgroovy:${RXGROOVY_VER}",
			"com.gentics.mesh:mesh-rest-client:${MESH_VER}"	
	testImplementation gradleTestKit()
	testImplementation("org.spockframework:spock-core:${SPOCK_VER}") {
		exclude module : 'groovy-all'
	}
}

gradlePlugin {
	// Define the plugin
	plugins {
		greeting {
			id = 'io.waweb.mesh'
			implementationClass = 'io.waweb.gradle.mesh.GradleMeshPlugin'
		}
	}
}

// Add a source set for the functional test suite
sourceSets {
	functionalTest {}
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
	testClassesDirs = sourceSets.functionalTest.output.classesDirs
	classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
	// Run the functional tests as part of `check`
	dependsOn(tasks.functionalTest)
}
